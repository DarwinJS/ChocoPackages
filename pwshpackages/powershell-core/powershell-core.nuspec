<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>powershell-core</id>
    <version>6.2.3</version>
    <packageSourceUrl>https://github.com/DarwinJS/ChocoPackages/blob/master/pwshpackages/powershell-core</packageSourceUrl>
    <owners>DarwinJS</owners>
    <title>powershell-core (Install)</title>
    <authors>Microsoft</authors>
    <projectUrl>https://github.com/PowerShell/PowerShell</projectUrl>
    <iconUrl>https://github.com/DarwinJS/ChocoPackages/blob/master/powershell-core/appicon.png</iconUrl>
    <copyright>Microsoft</copyright>
    <licenseUrl>https://github.com/PowerShell/PowerShell/blob/master/LICENSE.txt</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/PowerShell/PowerShell</projectSourceUrl>
    <docsUrl>https://github.com/PowerShell/PowerShell-Docs</docsUrl>
    <bugTrackerUrl>https://github.com/PowerShell/PowerShell/issues</bugTrackerUrl>
    <tags>powershell-core powershell pwsh admin</tags>
    <summary>PowerShell Core is the open source multiplatform version of PowerShell</summary>
    <description>PowerShell Core is the open source multiplatform version of PowerShell

    Preview releases are under the package id powershell-preview so that they can be safely installed and maintained side-by-side with the release versions on production systems.
    Preview versions do not become the default powershell core edition on a system (unless they are the ONLY edition), if you have a preview version installed, access it via pwsh's '-pre' switch.
    
    This package automatically does verbose MSI logging to %temp%\(packagenameandversion).MsiInstall.log

    Some helpful install options (any of them can be combined - delimited by space):

    * Any MSI Properties the package responds to can be specified in the same way, even if not documented here.

    --install-arguments='"ADD\_EXPLORER\_CONTEXT\_MENU\_OPENPOWERSHELL=1"'
    Installs a right click context menu to start a PowerShell Core prompt for a specific folder.

    --install-arguments='"REGISTER\_MANIFEST=1"'
    Causes PowerShell Core to deliver logs to Windows Event logs.

    --install-arguments='"ENABLE\_PSREMOTING=1"'
    Enable PS remoting during installation.

    --install-arguments='"ADD\_EXPLORER\_CONTEXT\_MENU\_OPENPOWERSHELL=1 REGISTER\_MANIFEST=1 ENABLE\_PSREMOTING=1"'
    Do it all.

    --packageparameters '"/CleanUpPath"'
    Removes all powershell core paths before starting install.  Cleans up old paths from old powershell core MSIs.

    </description>
    <releaseNotes>Product Release Notes https://github.com/PowerShell/PowerShell/releases/tag/v6.2.3
    Package release Notes:
    6.2.0
     - fixed #78 - 
     - fixed that package would consider powershell already installed if it encountered pwsh.exe
    6.2.0-rc1
     - package detects prerelease and displays correct install path in final message, other messaging corrections
    6.1.0.20181026
     - added chocolatey-core to dependencies
    v6.1.0-preview.2
     - new utility script Reset-PWSHSystemPath.ps1 included to clean up old path entries
       left by previous MSI installs.  This problem should not occur going forward.  To learn how to use this utility
       directly use "get-help $env:chocolateyinstall\lib\powershell-core\tools\Reset-PWSHSystemPath.ps1"
     - new chocolatey package switch to invoke path cleanup /CleanUpPath
    </releaseNotes>
    <dependencies>
      <dependency id="chocolatey-core.extension"/>
      <dependency id="KB2999226"/>
    </dependencies>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
